<?xml version="1.0" encoding="UTF-8"?>
<rules
    xmlns="http://namespaces.plone.org/diazo"
    xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

    <!-- Rules applying to standard Plone pages -->
    <rules css:if-content="#visual-portal-wrapper">

        <!-- indent and strip space for pretty output -->
        <xsl:output indent="yes"/>
        <xsl:strip-space elements="*"/>

        <theme href="index.html" />

        <!--
        Copy standard header tags, including base (very important for
        Plone default pages to work correctly), meta, title and
        style sheets/scripts, in the order they appear in the content.
         -->
        <drop theme="/html/head/meta" />
        <drop theme="/html/head/title" />
        <drop theme="/html/head/base" />
        <drop theme="/html/head/style" />
        <drop theme="/html/head/script" />
        <!--drop theme="/html/head/link" /-->
        <drop theme="/html/head/comment()" />

        <after theme-children="/html/head" content="/html/head/title"  />
        <after theme-children="/html/head" content="/html/head/base" />
        <after theme-children="/html/head" content="/html/head/meta" />
        <!--after theme-children="/html/head" content="/html/head/link" /-->
        <after theme-children="/html/head" content="/html/head/comment()" />
        <after theme-children="/html/head" content="/html/head/style" />
        <after theme-children="/html/head" content="/html/head/script" />

        <!-- set the html's css -->
        <before theme-children="/html" method="raw">
          <xsl:attribute name="class">
              <xsl:value-of select="/html/@class" />
              </xsl:attribute>
        </before>

        <!-- set the body's css -->
        <before theme-children="/html/body" method="raw">
          <xsl:attribute name="class">
              <xsl:value-of select="/html/body/@class" />
              </xsl:attribute>
        </before>


        <!-- logo -->
        <replace css:content="#portal-logo" css:theme-children="#logo" />
        <!--drop css:theme="#logo" css:if-not-content="body.section-front-page"/-->

        <!-- Breadcrumbs -->
        <replace css:content-children='#portal-breadcrumbs' css:theme-children='#breadcrumbs' />

        <!-- Navigation menu
             We add the content navmenu into a hidden div.
             The themed menu is built using javascript. This way we can
             overcome the Admin->Site setup for Bika Setup contentypes
             menu items being rendered. The menu items will only be rendered
             if the user has enough privileges.
        -->
        <after css:theme-children='#portal-nav-1'>
            <xsl:for-each css:select="ul.navTreeLevel0 > li.navTreeItem">
                <xsl:if test="count(a/span/text()) &lt; 1">
                    <li class="{@class} level1">
                        <a href="{div/a/@href}"><xsl:value-of css:select="div > a"/></a>
                    </li>
                </xsl:if>
                <xsl:if test="count(a/span/text()) &gt; 0">
                    <li class="{@class} level1">
                        <a href="{a/@href}"><xsl:value-of css:select="a > span"/></a>
                        <xsl:if test="count(ul/text()) &gt; 0">
                            <ul>
                                <xsl:for-each css:select="ul.navTreeLevel1 > li.navTreeItem">
                                    <li class='level2'>
                                        <xsl:if test="count(a/span/text()) &gt; 0">
                                            <a href="{a/@href}"><xsl:value-of css:select="a > span"/></a>
                                        </xsl:if>
                                        <xsl:if test="count(a/span/text()) &lt; 1">
                                            <a href="{a/@href}"><xsl:value-of css:select="a"/></a>
                                        </xsl:if>
                                    </li>
                                </xsl:for-each>
                           </ul>
                        </xsl:if>
                    </li>
                </xsl:if>
            </xsl:for-each>
            <xsl:for-each css:select="#portal-globalnav li">
                <li class='level1'>
                    <a href="{a/@href}"><xsl:value-of css:select="a"/></a>
                </li>
            </xsl:for-each>
        </after>
        <after css:theme-children='#portal-nav-2'>
            <xsl:for-each css:select="ul.navTreeLevel0 > li.navTreeItemInPath > ul > li">
                <xsl:if test="count(a/span/text()) &lt; 1">
                    <li class="{@class} level1">
                        <a href="{div/a/@href}"><xsl:value-of css:select="div > a"/></a>
                    </li>
                </xsl:if>
                <xsl:if test="count(a/span/text()) &gt; 0">
                    <li class="{@class} level1">
                        <a href="{a/@href}"><xsl:value-of css:select="a > span"/></a>
                        <xsl:if test="count(ul/text()) &gt; 0">
                            <ul>
                                <xsl:for-each css:select="ul.navTreeLevel1 > li.navTreeItem">
                                    <li class='level2'>
                                        <xsl:if test="count(a/span/text()) &gt; 0">
                                            <a href="{a/@href}"><xsl:value-of css:select="a > span"/></a>
                                        </xsl:if>
                                        <xsl:if test="count(a/span/text()) &lt; 1">
                                            <a href="{a/@href}"><xsl:value-of css:select="a"/></a>
                                        </xsl:if>
                                    </li>
                                </xsl:for-each>
                           </ul>
                       </xsl:if>
                   </li>
                </xsl:if>
            </xsl:for-each>
        </after>

        <replace css:theme-children='#portletNavigationTree' css:content='.portletNavigationTree'/>
        <replace css:theme-children='#portal-globalnav' css:content='#portal-globalnav' />

        <!-- Document Content -->
        <replace css:content="#content" css:theme="#content" />

        <!-- Footer -->
        <replace css:content-children="#portal-footer-wrapper" css:theme-children="#footer"/>
        <after css:theme-children='#footer'>
            <div class='themedby'>
                <a href='http://github.com/naralabs/graphite.theme'>Graphite Theme</a> by <a href='http://naralabs.com' class='logo-naralabs'><span>Naralabs</span></a>
            </div>
        </after>
    </rules>

</rules>
